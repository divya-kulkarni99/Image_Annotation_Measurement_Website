{"ast":null,"code":"var _jsxFileName = \"/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImageViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageViewer(_ref) {\n  _s();\n  let {\n    image\n  } = _ref;\n  const canvasRef = useRef(null);\n  const [keypoints, setKeypoints] = useState([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Draw image on the canvas\n    const img = new Image();\n    img.src = image.url;\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n\n    // Draw keypoints on the canvas\n    keypoints.forEach(keypoint => {\n      context.beginPath();\n      context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n      context.fillStyle = 'red';\n      context.fill();\n      context.closePath();\n    });\n  }, [image.url, keypoints]);\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    // Add new keypoint to the list\n    setKeypoints([...keypoints, {\n      x,\n      y\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image View Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800 // Set your desired width\n      ,\n      height: 600 // Set your desired height\n      ,\n      onClick: handleCanvasClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ImageViewer, \"pZj7e3Z5AgVbOXXITeYX2nF/Jok=\");\n_c = ImageViewer;\nexport default ImageViewer;\nvar _c;\n$RefreshReg$(_c, \"ImageViewer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ImageViewer","_ref","_s","image","canvasRef","keypoints","setKeypoints","canvas","current","context","getContext","img","Image","src","url","onload","drawImage","width","height","forEach","keypoint","beginPath","arc","x","y","Math","PI","fillStyle","fill","closePath","handleCanvasClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImageViewer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction ImageViewer({ image }) {\n  const canvasRef = useRef(null);\n  const [keypoints, setKeypoints] = useState([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Draw image on the canvas\n    const img = new Image();\n    img.src = image.url;\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n\n    // Draw keypoints on the canvas\n    keypoints.forEach((keypoint) => {\n      context.beginPath();\n      context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n      context.fillStyle = 'red';\n      context.fill();\n      context.closePath();\n    });\n  }, [image.url, keypoints]);\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    // Add new keypoint to the list\n    setKeypoints([...keypoints, { x, y }]);\n  };\n\n  return (\n    <div>\n      <h1>Image View Page</h1>\n      <canvas\n        ref={canvasRef}\n        width={800} // Set your desired width\n        height={600} // Set your desired height\n        onClick={handleCanvasClick}\n      />\n    </div>\n  );\n}\n\nexport default ImageViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC5B,MAAMG,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CE,SAAS,CAAC,MAAM;IACd,MAAMU,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEvC;IACA,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGV,KAAK,CAACW,GAAG;IACnBH,GAAG,CAACI,MAAM,GAAG,MAAM;MACjBN,OAAO,CAACO,SAAS,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACU,KAAK,EAAEV,MAAM,CAACW,MAAM,CAAC;IAC3D,CAAC;;IAED;IACAb,SAAS,CAACc,OAAO,CAAEC,QAAQ,IAAK;MAC9BX,OAAO,CAACY,SAAS,CAAC,CAAC;MACnBZ,OAAO,CAACa,GAAG,CAACF,QAAQ,CAACG,CAAC,EAAEH,QAAQ,CAACI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,EAAE,CAAC;MACtDjB,OAAO,CAACkB,SAAS,GAAG,KAAK;MACzBlB,OAAO,CAACmB,IAAI,CAAC,CAAC;MACdnB,OAAO,CAACoB,SAAS,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC1B,KAAK,CAACW,GAAG,EAAET,SAAS,CAAC,CAAC;EAE1B,MAAMyB,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMxB,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,MAAMwB,IAAI,GAAGzB,MAAM,CAAC0B,qBAAqB,CAAC,CAAC;IAC3C,MAAMV,CAAC,GAAGQ,KAAK,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI;IACnC,MAAMX,CAAC,GAAGO,KAAK,CAACK,OAAO,GAAGJ,IAAI,CAACK,GAAG;;IAElC;IACA/B,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;MAAEkB,CAAC;MAAEC;IAAE,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACEzB,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3C,OAAA;MACE4C,GAAG,EAAEvC,SAAU;MACfa,KAAK,EAAE,GAAI,CAAC;MAAA;MACZC,MAAM,EAAE,GAAI,CAAC;MAAA;MACb0B,OAAO,EAAEd;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACxC,EAAA,CA9CQF,WAAW;AAAA6C,EAAA,GAAX7C,WAAW;AAgDpB,eAAeA,WAAW;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}