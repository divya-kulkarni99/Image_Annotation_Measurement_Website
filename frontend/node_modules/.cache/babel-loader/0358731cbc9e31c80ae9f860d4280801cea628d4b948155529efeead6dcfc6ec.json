{"ast":null,"code":"var _jsxFileName = \"/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImagesAnnotationPage.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import ImagesAnnotation from './annotation/ImagesAnnotation';\n\n// function ImagesAnnotationPage() {\n//   const { id } = useParams();\n//   const [image, setImage] = useState(null);\n\n//   useEffect(() => {\n//     fetch(`http://localhost:5000/images/edit/${id}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setImage(data.data);\n//       })\n//       .catch((error) => {\n//         console.log(\"Error fetching image:\", error);\n//       });\n//   }, [id]);\n\n//   return (\n//     <div>\n\n//       {image && (\n//         <img\n//           alt=\"Clicked_Image\"\n//           width={600}\n//           height={600}\n//           src={image.image}\n//         />\n//       )}\n//       <ImagesAnnotation/>\n//     </div>\n//   );\n// }\n\n// export default ImagesAnnotationPage;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagesAnnotationPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [image, setImage] = useState(null);\n  const canvasRef = useRef(null);\n  const [keypoints, setKeypoints] = useState([]);\n  const [selectedKeypoints, setSelectedKeypoints] = useState([]);\n  const [lineDistance, setLineDistance] = useState(0);\n  const drawImage = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n    img.src = image.image;\n  };\n  const drawKeypoints = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'red';\n    keypoints.forEach(keypoint => {\n      context.beginPath();\n      context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n      context.fill();\n    });\n  };\n  const drawSelectedKeypoints = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'green';\n    selectedKeypoints.forEach(keypoint => {\n      context.beginPath();\n      context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n      context.fill();\n    });\n  };\n  const drawLine = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.strokeStyle = 'blue';\n    if (selectedKeypoints.length === 2) {\n      const [kp1, kp2] = selectedKeypoints;\n      context.beginPath();\n      context.moveTo(kp1.x, kp1.y);\n      context.lineTo(kp2.x, kp2.y);\n      context.stroke();\n    }\n  };\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const newKeypoint = {\n      x,\n      y\n    };\n    setKeypoints(prevKeypoints => [...prevKeypoints, newKeypoint]);\n  };\n  const handleKeypointClick = keypoint => {\n    setSelectedKeypoints(prevSelectedKeypoints => {\n      if (prevSelectedKeypoints.includes(keypoint)) {\n        return prevSelectedKeypoints.filter(kp => kp !== keypoint);\n      } else {\n        return [...prevSelectedKeypoints, keypoint];\n      }\n    });\n  };\n  useEffect(() => {\n    fetch(`http://localhost:5000/images/edit/${id}`).then(res => res.json()).then(data => {\n      setImage(data.data);\n    }).catch(error => {\n      console.log(\"Error fetching image:\", error);\n    });\n  }, [id]);\n  useEffect(() => {\n    if (image) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      drawImage();\n      drawKeypoints();\n      drawSelectedKeypoints();\n      drawLine();\n      if (selectedKeypoints.length === 2) {\n        const [kp1, kp2] = selectedKeypoints;\n        const distance = Math.sqrt(Math.pow(kp2.x - kp1.x, 2) + Math.pow(kp2.y - kp1.y, 2));\n        setLineDistance(distance);\n      } else {\n        setLineDistance(0);\n      }\n    }\n  }, [image, keypoints, selectedKeypoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 600,\n      onClick: handleCanvasClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Keypoints:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), keypoints.map((keypoint, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleKeypointClick(keypoint),\n        style: {\n          color: selectedKeypoints.includes(keypoint) ? 'green' : 'black',\n          cursor: 'pointer'\n        },\n        children: `Keypoint ${index + 1}: (${keypoint.x}, ${keypoint.y})`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), selectedKeypoints.length === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Distance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), `Distance between keypoints: ${lineDistance.toFixed(2)} pixels`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(ImagesAnnotationPage, \"VPIhMsVfNTKN55FkzZZopOkIasQ=\", false, function () {\n  return [useParams];\n});\n_c = ImagesAnnotationPage;\nexport default ImagesAnnotationPage;\nvar _c;\n$RefreshReg$(_c, \"ImagesAnnotationPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","jsxDEV","_jsxDEV","ImagesAnnotationPage","_s","id","image","setImage","canvasRef","keypoints","setKeypoints","selectedKeypoints","setSelectedKeypoints","lineDistance","setLineDistance","drawImage","canvas","current","context","getContext","img","Image","onload","width","height","src","drawKeypoints","fillStyle","forEach","keypoint","beginPath","arc","x","y","Math","PI","fill","drawSelectedKeypoints","drawLine","strokeStyle","length","kp1","kp2","moveTo","lineTo","stroke","handleCanvasClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","newKeypoint","prevKeypoints","handleKeypointClick","prevSelectedKeypoints","includes","filter","kp","fetch","then","res","json","data","catch","error","console","log","clearRect","distance","sqrt","pow","children","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","color","cursor","toFixed","_c","$RefreshReg$"],"sources":["/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImagesAnnotationPage.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import ImagesAnnotation from './annotation/ImagesAnnotation';\n\n// function ImagesAnnotationPage() {\n//   const { id } = useParams();\n//   const [image, setImage] = useState(null);\n\n//   useEffect(() => {\n//     fetch(`http://localhost:5000/images/edit/${id}`)\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setImage(data.data);\n//       })\n//       .catch((error) => {\n//         console.log(\"Error fetching image:\", error);\n//       });\n//   }, [id]);\n\n//   return (\n//     <div>\n      \n//       {image && (\n//         <img\n//           alt=\"Clicked_Image\"\n//           width={600}\n//           height={600}\n//           src={image.image}\n//         />\n//       )}\n//       <ImagesAnnotation/>\n//     </div>\n//   );\n// }\n\n// export default ImagesAnnotationPage;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction ImagesAnnotationPage() {\n  const { id } = useParams();\n  const [image, setImage] = useState(null);\n  const canvasRef = useRef(null);\n  const [keypoints, setKeypoints] = useState([]);\n  const [selectedKeypoints, setSelectedKeypoints] = useState([]);\n  const [lineDistance, setLineDistance] = useState(0);\n\n  const drawImage = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    };\n    img.src = image.image;\n  };\n\n  const drawKeypoints = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'red';\n    keypoints.forEach((keypoint) => {\n      context.beginPath();\n      context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n      context.fill();\n    });\n  };\n\n  const drawSelectedKeypoints = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillStyle = 'green';\n    selectedKeypoints.forEach((keypoint) => {\n      context.beginPath();\n      context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n      context.fill();\n    });\n  };\n\n  const drawLine = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.strokeStyle = 'blue';\n    if (selectedKeypoints.length === 2) {\n      const [kp1, kp2] = selectedKeypoints;\n      context.beginPath();\n      context.moveTo(kp1.x, kp1.y);\n      context.lineTo(kp2.x, kp2.y);\n      context.stroke();\n    }\n  };\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const newKeypoint = { x, y };\n    setKeypoints((prevKeypoints) => [...prevKeypoints, newKeypoint]);\n  };\n\n  const handleKeypointClick = (keypoint) => {\n    setSelectedKeypoints((prevSelectedKeypoints) => {\n      if (prevSelectedKeypoints.includes(keypoint)) {\n        return prevSelectedKeypoints.filter((kp) => kp !== keypoint);\n      } else {\n        return [...prevSelectedKeypoints, keypoint];\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/images/edit/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setImage(data.data);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching image:\", error);\n      });\n  }, [id]);\n\n  useEffect(() => {\n    if (image) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      drawImage();\n      drawKeypoints();\n      drawSelectedKeypoints();\n      drawLine();\n\n      if (selectedKeypoints.length === 2) {\n        const [kp1, kp2] = selectedKeypoints;\n        const distance = Math.sqrt(\n          Math.pow(kp2.x - kp1.x, 2) + Math.pow(kp2.y - kp1.y, 2)\n        );\n        setLineDistance(distance);\n      } else {\n        setLineDistance(0);\n      }\n    }\n  }, [image, keypoints, selectedKeypoints]);\n\n  return (\n    <div>\n      {/* {image && (\n        <img\n          alt=\"Clicked_Image\"\n          width={600}\n          height={600}\n          src={image.image}\n        />\n      )} */}\n      <canvas\n        ref={canvasRef}\n        width={600}\n        height={600}\n        onClick={handleCanvasClick}\n      />\n      <div>\n        <h4>Keypoints:</h4>\n        {keypoints.map((keypoint, index) => (\n          <div\n            key={index}\n            onClick={() => handleKeypointClick(keypoint)}\n            style={{\n              color: selectedKeypoints.includes(keypoint) ? 'green' : 'black',\n              cursor: 'pointer',\n            }}\n          >\n            {`Keypoint ${index + 1}: (${keypoint.x}, ${keypoint.y})`}\n          </div>\n        ))}\n      </div>\n      {selectedKeypoints.length === 2 && (\n        <div>\n          <h4>Distance:</h4>\n          {`Distance between keypoints: ${lineDistance.toFixed(2)} pixels`}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ImagesAnnotationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}