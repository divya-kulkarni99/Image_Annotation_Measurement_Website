{"ast":null,"code":"var _jsxFileName = \"/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImagesAnnotationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useRef, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ImagesAnnotationPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagesAnnotationPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [image, setImage] = useState(null);\n  const canvasRef = useRef(null);\n  const [keypoints, setKeypoints] = useState([]);\n  const [selectedKeypoints, setSelectedKeypoints] = useState([]);\n  const [lineDistance, setLineDistance] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [activeKeypoint, setActiveKeypoint] = useState(null);\n  const drawImage = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n      // Draw keypoints\n      context.fillStyle = 'red';\n      keypoints.forEach(keypoint => {\n        context.beginPath();\n        context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n        context.fill();\n      });\n\n      // Draw selected keypoints\n      context.fillStyle = 'green';\n      selectedKeypoints.forEach(keypoint => {\n        context.beginPath();\n        context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n        context.fill();\n      });\n\n      // Draw line between selected keypoints\n      context.strokeStyle = 'blue';\n      if (selectedKeypoints.length === 2) {\n        const [kp1, kp2] = selectedKeypoints;\n        context.beginPath();\n        context.moveTo(kp1.x, kp1.y);\n        context.lineTo(kp2.x, kp2.y);\n        context.stroke();\n      }\n    };\n    img.src = image.image;\n  }, [image, keypoints, selectedKeypoints]);\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const clickedKeypoint = keypoints.find(keypoint => {\n      const dx = keypoint.x - x;\n      const dy = keypoint.y - y;\n      return Math.sqrt(dx * dx + dy * dy) <= 5;\n    });\n    if (clickedKeypoint) {\n      handleKeypointDelete(clickedKeypoint);\n    } else {\n      const newKeypoint = {\n        x,\n        y\n      };\n      setKeypoints(prevKeypoints => [...prevKeypoints, newKeypoint]);\n    }\n  };\n\n  // const handleKeypointClick = (keypoint) => {\n  //   setSelectedKeypoints((prevSelectedKeypoints) => {\n  //     if (prevSelectedKeypoints.includes(keypoint)) {\n  //       return prevSelectedKeypoints.filter((kp) => kp !== keypoint);\n  //     } else {\n  //       return [...prevSelectedKeypoints, keypoint];\n  //     }\n  //   });\n  // };\n\n  const handleKeypointClick = keypoint => {\n    setSelectedKeypoints(prevSelectedKeypoints => {\n      if (prevSelectedKeypoints.includes(keypoint)) {\n        return prevSelectedKeypoints.filter(kp => kp !== keypoint);\n      } else {\n        return [...prevSelectedKeypoints, keypoint];\n      }\n    });\n  };\n  // const handleKeypointDelete = (keypoint) => {\n  //   setKeypoints((prevKeypoints) => prevKeypoints.filter((kp) => kp !== keypoint));\n  //   setSelectedKeypoints((prevSelectedKeypoints) =>\n  //     prevSelectedKeypoints.filter((kp) => kp !== keypoint)\n  //   );\n  // };\n  const handleKeypointDelete = keypoint => {\n    // Delete the keypoint from MongoDB\n    fetch(`/images/edit/${id}/keypoints/${keypoint._id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      if (data.status === 'Success') {\n        setKeypoints(prevKeypoints => prevKeypoints.filter(kp => kp !== keypoint));\n        setSelectedKeypoints(prevSelectedKeypoints => prevSelectedKeypoints.filter(kp => kp !== keypoint));\n      } else {\n        console.error('Failed to delete keypoint');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  const handleKeypointDrag = useCallback(event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    setKeypoints(prevKeypoints => prevKeypoints.map(keypoint => keypoint === activeKeypoint ? {\n      ...keypoint,\n      x,\n      y\n    } : keypoint));\n  }, [activeKeypoint]);\n  const handleMouseDown = (event, keypoint) => {\n    setIsDragging(true);\n    setActiveKeypoint(keypoint);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setActiveKeypoint(null);\n  };\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (isDragging) {\n      canvas.addEventListener('mousemove', handleKeypointDrag);\n      canvas.addEventListener('mouseup', handleMouseUp);\n    } else {\n      canvas.removeEventListener('mousemove', handleKeypointDrag);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      canvas.removeEventListener('mousemove', handleKeypointDrag);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleKeypointDrag]);\n  useLayoutEffect(() => {\n    fetch(`http://localhost:5000/images/edit/${id}`).then(res => res.json()).then(data => {\n      setImage(data.data);\n    }).catch(error => {\n      console.log(\"Error fetching image:\", error);\n    });\n  }, [id]);\n  useLayoutEffect(() => {\n    if (image) {\n      drawImage();\n      if (selectedKeypoints.length === 2) {\n        const [kp1, kp2] = selectedKeypoints;\n        const distance = Math.sqrt(Math.pow(kp2.x - kp1.x, 2) + Math.pow(kp2.y - kp1.y, 2));\n        setLineDistance(distance);\n      } else {\n        setLineDistance(0);\n      }\n    }\n  }, [image, keypoints, selectedKeypoints, drawImage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"canvas\",\n      width: 600,\n      height: 600,\n      onMouseDown: handleCanvasClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keypoints\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Keypoints:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), keypoints.map((keypoint, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `keypoint ${selectedKeypoints.includes(keypoint) ? 'selected' : ''}`,\n        onClick: () => handleKeypointClick(keypoint),\n        onMouseDown: event => handleMouseDown(event, keypoint),\n        children: `Keypoint ${index + 1}: (${keypoint.x}, ${keypoint.y})`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), selectedKeypoints.length === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distance\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Distance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), `Distance between keypoints: ${lineDistance.toFixed(2)} pixels`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(ImagesAnnotationPage, \"8aVVZKYyV9ip4zGzxY9bqOTE5T4=\", false, function () {\n  return [useParams];\n});\n_c = ImagesAnnotationPage;\nexport default ImagesAnnotationPage;\nvar _c;\n$RefreshReg$(_c, \"ImagesAnnotationPage\");","map":{"version":3,"names":["React","useLayoutEffect","useRef","useState","useCallback","useParams","jsxDEV","_jsxDEV","ImagesAnnotationPage","_s","id","image","setImage","canvasRef","keypoints","setKeypoints","selectedKeypoints","setSelectedKeypoints","lineDistance","setLineDistance","isDragging","setIsDragging","activeKeypoint","setActiveKeypoint","drawImage","canvas","current","context","getContext","img","Image","onload","width","height","fillStyle","forEach","keypoint","beginPath","arc","x","y","Math","PI","fill","strokeStyle","length","kp1","kp2","moveTo","lineTo","stroke","src","handleCanvasClick","event","rect","getBoundingClientRect","clientX","left","clientY","top","clickedKeypoint","find","dx","dy","sqrt","handleKeypointDelete","newKeypoint","prevKeypoints","handleKeypointClick","prevSelectedKeypoints","includes","filter","kp","fetch","_id","method","then","response","json","data","status","console","error","catch","handleKeypointDrag","map","handleMouseDown","handleMouseUp","addEventListener","removeEventListener","res","log","distance","pow","className","children","ref","onMouseDown","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","toFixed","_c","$RefreshReg$"],"sources":["/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImagesAnnotationPage.js"],"sourcesContent":["import React, { useLayoutEffect, useRef, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './ImagesAnnotationPage.css';\n\nfunction ImagesAnnotationPage() {\n  const { id } = useParams();\n  const [image, setImage] = useState(null);\n  const canvasRef = useRef(null);\n  const [keypoints, setKeypoints] = useState([]);\n  const [selectedKeypoints, setSelectedKeypoints] = useState([]);\n  const [lineDistance, setLineDistance] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [activeKeypoint, setActiveKeypoint] = useState(null);\n\n  const drawImage = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const img = new Image();\n    img.onload = () => {\n      context.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n      // Draw keypoints\n      context.fillStyle = 'red';\n      keypoints.forEach((keypoint) => {\n        context.beginPath();\n        context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n        context.fill();\n      });\n\n      // Draw selected keypoints\n      context.fillStyle = 'green';\n      selectedKeypoints.forEach((keypoint) => {\n        context.beginPath();\n        context.arc(keypoint.x, keypoint.y, 5, 0, 2 * Math.PI);\n        context.fill();\n      });\n\n      // Draw line between selected keypoints\n      context.strokeStyle = 'blue';\n      if (selectedKeypoints.length === 2) {\n        const [kp1, kp2] = selectedKeypoints;\n        context.beginPath();\n        context.moveTo(kp1.x, kp1.y);\n        context.lineTo(kp2.x, kp2.y);\n        context.stroke();\n      }\n    };\n    img.src = image.image;\n  }, [image, keypoints, selectedKeypoints]);\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    const clickedKeypoint = keypoints.find((keypoint) => {\n      const dx = keypoint.x - x;\n      const dy = keypoint.y - y;\n      return Math.sqrt(dx * dx + dy * dy) <= 5;\n    });\n\n    if (clickedKeypoint) {\n      handleKeypointDelete(clickedKeypoint);\n    } else {\n      const newKeypoint = { x, y };\n      setKeypoints((prevKeypoints) => [...prevKeypoints, newKeypoint]);\n    }\n  };\n\n  // const handleKeypointClick = (keypoint) => {\n  //   setSelectedKeypoints((prevSelectedKeypoints) => {\n  //     if (prevSelectedKeypoints.includes(keypoint)) {\n  //       return prevSelectedKeypoints.filter((kp) => kp !== keypoint);\n  //     } else {\n  //       return [...prevSelectedKeypoints, keypoint];\n  //     }\n  //   });\n  // };\n\n  const handleKeypointClick = (keypoint) => {\n    setSelectedKeypoints((prevSelectedKeypoints) => {\n      if (prevSelectedKeypoints.includes(keypoint)) {\n        return prevSelectedKeypoints.filter((kp) => kp !== keypoint);\n      } else {\n        return [...prevSelectedKeypoints, keypoint];\n      }\n    });\n  };\n  // const handleKeypointDelete = (keypoint) => {\n  //   setKeypoints((prevKeypoints) => prevKeypoints.filter((kp) => kp !== keypoint));\n  //   setSelectedKeypoints((prevSelectedKeypoints) =>\n  //     prevSelectedKeypoints.filter((kp) => kp !== keypoint)\n  //   );\n  // };\n  const handleKeypointDelete = (keypoint) => {\n    // Delete the keypoint from MongoDB\n    fetch(`/images/edit/${id}/keypoints/${keypoint._id}`, {\n      method: 'DELETE',\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === 'Success') {\n          setKeypoints((prevKeypoints) =>\n            prevKeypoints.filter((kp) => kp !== keypoint)\n          );\n          setSelectedKeypoints((prevSelectedKeypoints) =>\n            prevSelectedKeypoints.filter((kp) => kp !== keypoint)\n          );\n        } else {\n          console.error('Failed to delete keypoint');\n        }\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  };\n\n  const handleKeypointDrag = useCallback((event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    setKeypoints((prevKeypoints) =>\n      prevKeypoints.map((keypoint) =>\n        keypoint === activeKeypoint ? { ...keypoint, x, y } : keypoint\n      )\n    );\n  }, [activeKeypoint]);\n\n  const handleMouseDown = (event, keypoint) => {\n    setIsDragging(true);\n    setActiveKeypoint(keypoint);\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setActiveKeypoint(null);\n  };\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (isDragging) {\n      canvas.addEventListener('mousemove', handleKeypointDrag);\n      canvas.addEventListener('mouseup', handleMouseUp);\n    } else {\n      canvas.removeEventListener('mousemove', handleKeypointDrag);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleKeypointDrag);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, handleKeypointDrag]);\n\n  useLayoutEffect(() => {\n    fetch(`http://localhost:5000/images/edit/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setImage(data.data);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching image:\", error);\n      });\n  }, [id]);\n\n  useLayoutEffect(() => {\n    if (image) {\n      drawImage();\n\n      if (selectedKeypoints.length === 2) {\n        const [kp1, kp2] = selectedKeypoints;\n        const distance = Math.sqrt(\n          Math.pow(kp2.x - kp1.x, 2) + Math.pow(kp2.y - kp1.y, 2)\n        );\n        setLineDistance(distance);\n      } else {\n        setLineDistance(0);\n      }\n    }\n  }, [image, keypoints, selectedKeypoints, drawImage]);\n\n  return (\n    <div className=\"container\">\n      <canvas\n        ref={canvasRef}\n        className=\"canvas\"\n        width={600}\n        height={600}\n        onMouseDown={handleCanvasClick}\n      />\n\n      <div className=\"keypoints\">\n        <h4>Keypoints:</h4>\n        {keypoints.map((keypoint, index) => (\n          <div\n            key={index}\n            className={`keypoint ${selectedKeypoints.includes(keypoint) ? 'selected' : ''}`}\n            onClick={() => handleKeypointClick(keypoint)}\n            onMouseDown={(event) => handleMouseDown(event, keypoint)}\n          >\n            {`Keypoint ${index + 1}: (${keypoint.x}, ${keypoint.y})`}\n          </div>\n        ))}\n      </div>\n\n      {selectedKeypoints.length === 2 && (\n        <div className=\"distance\">\n          <h4>Distance:</h4>\n          {`Distance between keypoints: ${lineDistance.toFixed(2)} pixels`}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ImagesAnnotationPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}