{"ast":null,"code":"var _jsxFileName = \"/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// const cors = require('cors');\n// UploadPage.use(cors());\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage(props) {\n  _s();\n  const [image, setImage] = useState(\"\");\n  const [allImages, setAllImages] = useState([]);\n  function convertToBase64(e) {\n    console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n      console.log(reader.result); //base64encoded string  \n      setImage(reader.result);\n    };\n    reader.onerror = error => {\n      console.log(\"Error: \", error);\n    };\n  }\n  useEffect(() => {\n    getImage();\n  }, []);\n  function uploadImage() {\n    fetch(\"http://localhost:5000/uploadImage\", {\n      method: \"POST\",\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: JSON.stringify({\n        base64: image\n      })\n    }).then(res => res.json()).then(data => console.log(data));\n  }\n  function getImage() {\n    fetch(\"http://localhost:5000/imagespage\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setAllImages(data.data);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Let's Upload Images\", /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        type: \"file\",\n        onChange: convertToBase64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), image === \"\" || image == null ? \"\" : /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"UploadedImage\",\n        width: 100,\n        height: 100,\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadImage,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), allImages.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: data.alt || \"All Images\",\n          width: 100,\n          height: 100,\n          src: data.image\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"pJwOPN4YZuAPav5Eos4A4AYIVaI=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UploadPage","props","_s","image","setImage","allImages","setAllImages","convertToBase64","e","console","log","reader","FileReader","readAsDataURL","target","files","onload","result","onerror","error","getImage","uploadImage","fetch","method","crossDomain","headers","body","JSON","stringify","base64","then","res","json","data","children","accept","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","alt","width","height","src","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/UploadPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// const cors = require('cors');\n// UploadPage.use(cors());\nfunction UploadPage(props) {\n  const [image,setImage] = useState(\"\");\n  const [allImages,setAllImages] = useState([]);\n\n  function convertToBase64(e) {\n    console.log(e);\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n        console.log(reader.result); //base64encoded string  \n        setImage(reader.result);\n    };\n    reader.onerror = error => {\n        console.log(\"Error: \", error);\n    };\n}\nuseEffect(() =>{\n  getImage()\n},[])\n\nfunction uploadImage() {\n  fetch(\"http://localhost:5000/uploadImage\", {\n      method: \"POST\",\n      crossDomain: true,\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      body: JSON.stringify({\n          base64: image\n      })\n  }).then((res) => res.json()).then((data) => console.log(data))\n}\nfunction getImage(){\n  fetch(\"http://localhost:5000/imagespage\", {\n    method: \"GET\",\n\n  }).then((res) => res.json()).then((data) => {console.log(data)\n  setAllImages(data.data)})\n\n}\n  return (\n    <div>\n        <div>\n            Let's Upload Images\n            <input\n                accept=\"image/*\"\n                type=\"file\"\n                onChange={convertToBase64}\n            />\n            \n            {image === \"\" || image == null ? \"\" : <img alt = \"UploadedImage\" width={100} height={100} src={image} />}\n            <button onClick={uploadImage}>Upload</button>\n            {/* {allImages.map(data,index)=>{\n                    return(\n                        <img key={index} alt =\"All Images\"width={100} height={100} src={data.image} />\n                        \n                    )\n                }} */}\n                {allImages.map((data, index) => {\n                return (\n                  <img\n                    key={index}\n                    alt={data.alt || \"All Images\"}\n                    width={100}\n                    height={100}\n                    src={data.image}\n                  />\n                );\n              })}\n\n\n            </div>\n    </div>\n  );\n}\n\nexport default UploadPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}