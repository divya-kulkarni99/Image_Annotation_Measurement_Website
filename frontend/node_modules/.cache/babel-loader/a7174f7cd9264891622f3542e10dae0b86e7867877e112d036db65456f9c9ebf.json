{"ast":null,"code":"var _jsxFileName = \"/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImagesAnnotation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagesAnnotation() {\n  _s();\n  const [keypoints, setKeypoints] = useState([]);\n  const [selectedKeypoints, setSelectedKeypoints] = useState([]);\n  const [distance, setDistance] = useState(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Load the image onto the canvas\n    const image = new Image();\n    image.src = 'path/to/your/image.jpg'; // Replace with your image URL\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0);\n    };\n  }, []);\n  const handleCanvasClick = event => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const newKeypoint = {\n      x,\n      y\n    };\n    setKeypoints([...keypoints, newKeypoint]);\n  };\n  const handleKeypointClick = index => {\n    if (selectedKeypoints.length < 2) {\n      setSelectedKeypoints([...selectedKeypoints, index]);\n      if (selectedKeypoints.length === 1) {\n        const pointA = keypoints[selectedKeypoints[0]];\n        const pointB = keypoints[index];\n        const distance = Math.sqrt(Math.pow(pointB.x - pointA.x, 2) + Math.pow(pointB.y - pointA.y, 2));\n        setDistance(distance);\n      }\n    }\n  };\n  const handleClearButtonClick = () => {\n    setKeypoints([]);\n    setSelectedKeypoints([]);\n    setDistance(null);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    keypoints.forEach((point, index) => {\n      context.beginPath();\n      context.arc(point.x, point.y, 5, 0, 2 * Math.PI);\n      context.fillStyle = selectedKeypoints.includes(index) ? 'red' : 'blue';\n      context.fill();\n    });\n    if (selectedKeypoints.length === 2) {\n      const pointA = keypoints[selectedKeypoints[0]];\n      const pointB = keypoints[selectedKeypoints[1]];\n      context.beginPath();\n      context.moveTo(pointA.x, pointA.y);\n      context.lineTo(pointB.x, pointB.y);\n      context.strokeStyle = 'green';\n      context.lineWidth = 2;\n      context.stroke();\n    }\n  }, [keypoints, selectedKeypoints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Annotation Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onClick: handleCanvasClick,\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: keypoints.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: selectedKeypoints.includes(index) ? 'red' : 'blue',\n          color: 'white',\n          display: 'inline-block',\n          padding: '5px',\n          margin: '5px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleKeypointClick(index),\n        children: [\"Point \", index + 1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Distance: \", distance.toFixed(2), \" pixels\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearButtonClick,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ImagesAnnotation, \"4mWNFysYN+MYR1Z7SiU3oNXwYC8=\");\n_c = ImagesAnnotation;\nexport default ImagesAnnotation();\nvar _c;\n$RefreshReg$(_c, \"ImagesAnnotation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","ImagesAnnotation","_s","keypoints","setKeypoints","selectedKeypoints","setSelectedKeypoints","distance","setDistance","canvasRef","canvas","current","context","getContext","image","Image","src","onload","width","height","drawImage","handleCanvasClick","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","newKeypoint","handleKeypointClick","index","length","pointA","pointB","Math","sqrt","pow","handleClearButtonClick","clearRect","forEach","point","beginPath","arc","PI","fillStyle","includes","fill","moveTo","lineTo","strokeStyle","lineWidth","stroke","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","style","border","map","backgroundColor","color","display","padding","margin","cursor","toFixed","_c","$RefreshReg$"],"sources":["/Users/divyakulkarni/Desktop/IAMW/image-annotation-measurement/src/pages/ImagesAnnotation.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nfunction ImagesAnnotation() {\n  const [keypoints, setKeypoints] = useState([]);\n  const [selectedKeypoints, setSelectedKeypoints] = useState([]);\n  const [distance, setDistance] = useState(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Load the image onto the canvas\n    const image = new Image();\n    image.src = 'path/to/your/image.jpg'; // Replace with your image URL\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0);\n    };\n  }, []);\n\n  const handleCanvasClick = (event) => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const newKeypoint = { x, y };\n    setKeypoints([...keypoints, newKeypoint]);\n  };\n\n  const handleKeypointClick = (index) => {\n    if (selectedKeypoints.length < 2) {\n      setSelectedKeypoints([...selectedKeypoints, index]);\n      if (selectedKeypoints.length === 1) {\n        const pointA = keypoints[selectedKeypoints[0]];\n        const pointB = keypoints[index];\n        const distance = Math.sqrt(\n          Math.pow(pointB.x - pointA.x, 2) + Math.pow(pointB.y - pointA.y, 2)\n        );\n        setDistance(distance);\n      }\n    }\n  };\n\n  const handleClearButtonClick = () => {\n    setKeypoints([]);\n    setSelectedKeypoints([]);\n    setDistance(null);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    keypoints.forEach((point, index) => {\n      context.beginPath();\n      context.arc(point.x, point.y, 5, 0, 2 * Math.PI);\n      context.fillStyle = selectedKeypoints.includes(index)\n        ? 'red'\n        : 'blue';\n      context.fill();\n    });\n\n    if (selectedKeypoints.length === 2) {\n      const pointA = keypoints[selectedKeypoints[0]];\n      const pointB = keypoints[selectedKeypoints[1]];\n\n      context.beginPath();\n      context.moveTo(pointA.x, pointA.y);\n      context.lineTo(pointB.x, pointB.y);\n      context.strokeStyle = 'green';\n      context.lineWidth = 2;\n      context.stroke();\n    }\n  }, [keypoints, selectedKeypoints]);\n\n  return (\n    <div>\n      <h1>Image Annotation Page</h1>\n      <canvas\n        ref={canvasRef}\n        onClick={handleCanvasClick}\n        style={{ border: '1px solid black' }}\n      ></canvas>\n      <div>\n        {keypoints.map((point, index) => (\n          <div\n            key={index}\n            style={{\n              backgroundColor: selectedKeypoints.includes(index)\n                ? 'red'\n                : 'blue',\n              color: 'white',\n              display: 'inline-block',\n              padding: '5px',\n              margin: '5px',\n              cursor: 'pointer',\n            }}\n            onClick={() => handleKeypointClick(index)}\n          >\n            Point {index + 1}\n          </div>\n        ))}\n      </div>\n      {distance && <p>Distance: {distance.toFixed(2)} pixels</p>}\n      <button onClick={handleClearButtonClick}>Clear</button>\n    </div>\n  );\n}\n\nexport default ImagesAnnotation();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}